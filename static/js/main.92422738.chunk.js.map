{"version":3,"sources":["images/gnome.png","images/heart.svg","images/exit.svg","images/404.jpg","contexts/auth-context.js","components/WithAuth.js","components/AnonRoute.js","pages/WelcomePage.js","components/SearchResultCard.js","components/Header.js","services/BrastlewarkService.js","pages/HomePage.js","pages/Favorites.js","pages/GnomeDetail.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthContext","React","createContext","AuthProvider","state","user","isAllowedVisitor","saveVisitorName","name","localStorage","setItem","JSON","stringify","setState","deleteUser","removeItem","addRemoveFavorite","inhabitantId","favoriteList","parse","getItem","undefined","favorites","includes","splice","indexOf","push","this","Provider","value","props","children","Component","WithAuth","Comp","Consumer","component","to","render","WelcomePage","handleChange","event","target","trim","handleSubmit","preventDefault","className","src","gnome","alt","onSubmit","type","onChange","placeholder","redirect","redirectToInhabitant","handleFavorite","stopPropagation","inhabitant","id","updateFavoriteList","getFavoriteList","age","hair_color","onClick","style","backgroundColor","color","textDecoration","heart","exit","brastlewarkService","axios","get","then","response","HomePage","inhabitants","paginatedInhabitants","itemsPerPage","numberOfPages","currentPage","searchName","searchAge","searchProfession","searchHairColor","professionList","hairColorList","isLoading","pagination","filteredInhabitants","filterInhabitants","Math","ceil","length","slice","filter","toLowerCase","toString","professions","reset","getAllHabitants","data","Brastlewark","Set","reduce","acc","curr","concat","map","catch","error","console","log","profession","i","key","fontWeight","toUpperCase","href","Array","from","e","favorite","GnomeDetail","gnomeInfo","location","match","params","history","thumbnail","weight","height","friends","friend","NotFound","notfoundImage","App","basename","process","exact","path","Favorites","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92422738.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gnome.44778f64.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.ce070b7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/exit.ead0da35.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.3c703b8c.jpg\";","import React, { Component } from 'react';\n\nexport const AuthContext = React.createContext();\n\n// Check if the visitor has introduced his name (we check if is saved in localstorage)\nclass AuthProvider extends Component {\n  state = {\n    user: null,\n    isAllowedVisitor: false,\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem('BrastlewarkVisitor');\n    const isAllowedVisitor = user === null ? false : true;\n    this.setState({\n      user,\n      isAllowedVisitor\n    })\n  }\n\n  saveVisitorName = (name) => {\n    if (name !== '') {\n      localStorage.setItem('BrastlewarkVisitor', JSON.stringify({ 'name': name }));\n      this.setState({\n        isAllowedVisitor: true,\n        user: name\n      });\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  deleteUser = () => {\n    localStorage.removeItem('BrastlewarkVisitor');\n    this.setState({\n      isAllowedVisitor: false,\n    })\n  }\n\n  // Check is we have favorite list in localStorage, and store the selected id if not\n  addRemoveFavorite = (inhabitantId) => {\n    let favoriteList = JSON.parse(localStorage.getItem('BrastlewarkVisitor'));\n    favoriteList.favorites === undefined \n    ? favoriteList.favorites = [inhabitantId] \n    : favoriteList.favorites.includes(inhabitantId) \n    ? favoriteList.favorites.splice(favoriteList.favorites.indexOf(inhabitantId),1) \n    : favoriteList.favorites.push(inhabitantId);\n\n    localStorage.setItem('BrastlewarkVisitor', JSON.stringify(favoriteList));\n  }\n\n  render() {\n    const { user, isAllowedVisitor } = this.state;\n    return (\n      <AuthContext.Provider value={\n        {\n          user,\n          isAllowedVisitor,\n          saveVisitorName: this.saveVisitorName,\n          addRemoveFavorite: this.addRemoveFavorite,\n          deleteUser: this.deleteUser\n        }\n      }>\n        {this.props.children}\n      </AuthContext.Provider>\n    );\n  }\n}\n\nexport default AuthProvider;\n","import React, { Component } from 'react';\n\nimport { AuthContext } from '../contexts/auth-context.js';\n\nconst WithAuth = (Comp) => {\n  return class WithAuth extends Component {\n    render() {\n      return (\n        <AuthContext.Consumer>\n          {({ user, isAllowedVisitor, addRemoveFavorite, saveVisitorName, deleteUser }) => (\n            <Comp\n              user={user}\n              isAllowedVisitor={isAllowedVisitor}\n              addRemoveFavorite={addRemoveFavorite}\n              saveVisitorName={saveVisitorName}\n              deleteUser={deleteUser}\n              {...this.props}\n            />\n          )}\n        </AuthContext.Consumer>\n      );\n    }\n  };\n};\n\nexport default WithAuth;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport WithAuth from '../components/WithAuth.js';\n\n// If exists a visitor in the localStorage, we display the homepage, otherwise, we display welcome page\nconst AnonRoute = (props) => {\n  const { component: Component, isAllowedVisitor, user, saveVisitorName } = props;\n  return (\n    <>\n      {isAllowedVisitor ? <Redirect to=\"/homepage\" /> :\n        <Route render={props => {\n          return <Component\n            user={user}\n            isAllowedVisitor={isAllowedVisitor}\n            saveVisitorName={saveVisitorName}\n            {...props} />;\n        }} />\n      }\n    </>\n  );\n};\n\nexport default WithAuth(AnonRoute);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport gnome from '../images/gnome.png';\n\nclass WelcomePage extends Component {\n  state = {\n    name: ''\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value.trim() });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.saveVisitorName(this.state.name);\n  }\n\n  render() {\n    const { name } = this.state;\n    return (\n      <div>\n        <div className=\"welcomepage\">\n          <div className=\"welcomepage-container\">\n            <div className=\"welcomepage-container-message u-margin-top-big u-margin-bottom-medium\">\n              <div className=\"triangle\"></div>\n              <h2>Welcome to</h2>\n              <h2 className=\"welcomepage-container-message-name\">BRASTLEWARK!</h2>\n              <p>[ the gnome-town <span>:3</span> ]</p>\n            </div>\n            <img className=\"u-margin-bottom-small\" src={gnome} alt={'gnome'}/>\n            <form onSubmit={this.handleSubmit}>\n              <input className=\"input u-margin-bottom-medium\" type=\"text\" name=\"name\" value={name} onChange={this.handleChange} placeholder=\"Tsh! human! what's yout name?\" />\n              <button className={name.trim() !== '' ? \"button\" : \"u-is-disabled button\"} type=\"submit\">Enter the town</button>\n            </form>\n            <Link className=\"jump u-margin-top-medium\" to=\"/homepage\">Meh! not now... I'll jump the wall</Link>\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default WelcomePage;\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport WithAuth from '../components/WithAuth.js';\n\nclass SearchResultCard extends Component {\n  state = {\n    redirect: false,\n    redirectToInhabitant: false,\n    favoriteList: []\n  }\n\n  componentDidMount() {\n    this.updateFavoriteList();\n  }\n\n  // Heart icon: If there is a user in localStore, save the selected ID; otherwise make a redirection to welcome page\n  handleFavorite = (event) => {\n    event.stopPropagation();\n    const { addRemoveFavorite, inhabitant, isAllowedVisitor } = this.props;\n    if (isAllowedVisitor) {\n      addRemoveFavorite(inhabitant.id);\n      this.updateFavoriteList();\n    } else {\n      this.setState({\n        redirect: true\n      })\n    }\n  }\n\n  updateFavoriteList = () => {\n    const { getFavoriteList } = this.props;\n    const favoriteList = JSON.parse(localStorage.getItem('BrastlewarkVisitor'));\n    if (favoriteList !== null && favoriteList.favorites !== undefined) {\n      this.setState({\n        favoriteList: favoriteList.favorites\n      }, () => { getFavoriteList() })\n    }\n  }\n\n  redirectToInhabitant = () => {\n    this.setState({\n      redirectToInhabitant: true\n    })\n  }\n\n  render() {\n    const { name, age, id, hair_color } = this.props.inhabitant;\n    const { favoriteList } = this.state;\n    if (this.state.redirect) { return <Redirect to='/favorites' /> }\n    if (this.state.redirectToInhabitant) { return <Redirect to={`/gnomes/${id}`} /> }\n    return (\n      <div className=\"search-card\" onClick={this.redirectToInhabitant}>\n        <div className=\"search-card-haircolor\" style={{backgroundColor: hair_color}}></div>\n        <div className=\"search-card-info\"><p className=\"search-card-info-name\">{name}</p> <p className=\"search-card-info-age\">age <span>{age}</span></p></div>\n        <span className=\"search-card-heart\" onClick={this.handleFavorite} style={favoriteList.includes(id) ? { color: '#F2627A' } : { color: '#adabab' }}>{/*&#9829;*/}&#10084;</span>\n      </div>\n    );\n  }\n}\n\nexport default WithAuth(SearchResultCard);","import React, {Component} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport heart from '../images/heart.svg';\nimport exit from '../images/exit.svg';\n\nimport WithAuth from '../components/WithAuth';\n\n\nclass Header extends Component {\n  state = {\n    redirect: false\n  }\n\n  // Delete user from the localStorage\n  deleteUser = () => {\n    this.props.deleteUser();\n    this.setState({\n      redirect: true\n    })\n  }\n\n  render() {\n    if(this.state.redirect) {return <Redirect to=\"/\"/>}\n    return (\n      <div className=\"header\">\n        <div className=\"header-container\">\n        <Link to=\"/homepage\" style={{ textDecoration: 'none' }}><span>BRASTLEWARK</span></Link> \n          <div> \n            <Link to=\"/favorites\"><img src={heart} alt=\"favorites\"/></Link> \n            { this.props.isAllowedVisitor ?\n              <a onClick={this.deleteUser}><img className=\"header-container-exit\" src={exit} alt=\"logout\" /></a>\n              : null\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WithAuth(Header);\n","import axios from 'axios';\n\n// Get the info of inhabitants\nclass BrastlewarkService {\n  getAllHabitants() {\n    return axios.get('https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json')\n      .then(response => response);\n  }\n}\n\nconst brastlewarkService = new BrastlewarkService();\n\nexport default brastlewarkService;","import React, { Component } from 'react';\n\nimport SearchResultCard from '../components/SearchResultCard';\nimport Header from '../components/Header';\n\nimport brastlewarkService from '../services/BrastlewarkService';\n\nclass HomePage extends Component {\n  state = {\n    inhabitants: [],\n    paginatedInhabitants: [],\n    itemsPerPage: 135,\n    numberOfPages: 1,\n    currentPage: 1,\n    searchName: '',\n    searchAge: '',\n    searchProfession: '',\n    searchHairColor: '',\n    professionList: [],\n    hairColorList: [],\n    isLoading: true\n  }\n\n  // Get all the inhabitants of the town. We save also the list of all professions/hairColor to display it in a select input\n  componentDidMount() {\n    brastlewarkService.getAllHabitants()\n      .then(response => {\n        const inhabitants = response.data.Brastlewark;\n        const professionList = [...new Set(inhabitants.reduce((acc, curr) => { return acc = acc.concat(curr.professions); }, []))];\n        const hairColorList = [...new Set(inhabitants.map(inhabitant => inhabitant.hair_color))];\n        this.setState({\n          professionList,\n          hairColorList\n        }, () => this.pagination(inhabitants, this.state.currentPage));\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  // This method paginate the result list to a better UX. The result is filtered by the searchName input value\n  pagination = (inhabitants, currentPage) => {\n    const { itemsPerPage } = this.state;\n    const filteredInhabitants = this.filterInhabitants(inhabitants);\n    const numberOfPages = Math.ceil(filteredInhabitants.length / itemsPerPage);\n    const paginatedInhabitants = filteredInhabitants.slice((itemsPerPage * currentPage) - itemsPerPage, itemsPerPage * currentPage);\n\n    this.setState({\n      inhabitants,\n      numberOfPages,\n      paginatedInhabitants,\n      currentPage,\n      isLoading: false\n    })\n  }\n\n  // Helper function to filter by different parameters\n  filterInhabitants = (inhabitants) => {\n    const { searchName, searchAge, searchProfession, searchHairColor } = this.state;\n    let filterInhabitants = [...inhabitants].filter(inhabitant => { return inhabitant.name.toLowerCase().includes(searchName.toLowerCase()) });\n    filterInhabitants = [...filterInhabitants].filter(inhabitant => { return inhabitant.age.toString().includes(searchAge) });\n    filterInhabitants = [...filterInhabitants].filter(inhabitant => { return (searchProfession === '') ? true : inhabitant.professions.includes(searchProfession) });\n    filterInhabitants = [...filterInhabitants].filter(inhabitant => { return (searchHairColor === '') ? true : inhabitant.hair_color.includes(searchHairColor) });\n    return filterInhabitants;\n  }\n\n  handleChange = (event) => {\n    const { inhabitants } = this.state;\n    const { name, value } = event.target;\n    this.setState({ [name]: value },\n      () => { this.pagination(inhabitants, 1); });\n  }\n\n  // Reset all the filtering fields\n  reset = () => {\n    const { inhabitants } = this.state;\n\n    this.setState({\n      searchName: '',\n      searchAge: '',\n      searchProfession: '',\n      searchHairColor: ''\n    }, () => { this.pagination(inhabitants, 1) })\n  }\n\n  render() {\n    const { paginatedInhabitants,\n      numberOfPages,\n      currentPage,\n      inhabitants,\n      searchName,\n      searchAge,\n      searchProfession,\n      searchHairColor,\n      professionList,\n      hairColorList,\n      isLoading } = this.state;\n\n    return (\n      <div>\n        <Header />\n        <div className=\"homepage\">\n          <div className=\"homepage-container\">\n            <div className=\"homepage-searchbox u-margin-bottom-medium\">\n              <div className=\"triangle\"></div>\n              <input className=\"homepage-searchbox-name input\" type=\"text\" name=\"searchName\" value={searchName} onChange={this.handleChange} placeholder=\"Filter Gnomes by name :3\" />\n                <div className=\"u-margin-top-small u-margin-bottom-small\">\n                  <input className=\"input\" type=\"number\" name=\"searchAge\" value={searchAge} onChange={this.handleChange} placeholder=\"age\" />\n                  <span></span>\n                  <select className=\"select\" name=\"searchProfession\" onChange={this.handleChange} value={searchProfession}>\n                    <option value=\"\">profession</option>\n                    {professionList.map((profession, i) => { return <option key={i} value={profession}>{profession}</option> })}\n                  </select>\n                  <span></span>\n                  <select className=\"select\" name=\"searchHairColor\" onChange={this.handleChange} value={searchHairColor}>\n                    <option value=\"\">Hair Color</option>\n                    {hairColorList.map((color, i) => { return <option key={i} value={color} style={{ color, fontWeight: '700' }}>{color.toUpperCase()}</option> })}\n                  </select>\n                </div>\n              <a className=\"button\" href=\"#0\" onClick={this.reset}>reset</a>\n            </div>\n        {paginatedInhabitants.length === 0 ? isLoading ? <div className=\"homepage-empty\">Loading...</div> : <div className=\"homepage-empty\">No results&nbsp;<span>:(</span> </div> : (\n          <div className=\"homepage-resultbody\">\n            {paginatedInhabitants.map(inhabitant => {\n              return <SearchResultCard key={inhabitant.id} inhabitant={inhabitant} getFavoriteList={() => { return null }} />\n            })}\n            <div className=\"homepage-pagination u-margin-bottom-small u-margin-top-small\">\n            {Array.from(Array(numberOfPages), (e, i) => {\n              return (numberOfPages > 1) ?\n              <a className=\"button\" href=\"#0\" className={currentPage === i + 1 ? 'button u-is-disabled' : 'button'} key={i} onClick={() => this.pagination(inhabitants, i + 1)}>{i + 1}</a>\n              : null\n            })}\n            </div>\n          </div>\n        )}\n        </div>\n      </div>\n      </div >\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport WithAuth from '../components/WithAuth.js';\nimport SearchResultCard from '../components/SearchResultCard';\nimport Header from '../components/Header';\n\nimport brastlewarkService from '../services/BrastlewarkService';\n\nclass Favorites extends Component {\n  state = {\n    favoriteList: [],\n    name: 'Visitor'\n  }\n\n  // Get favoriteList from localStorage\n  componentDidMount() {\n    this.getFavoriteList();\n  }\n\n  getFavoriteList = () => {\n    let favoriteList = JSON.parse(localStorage.getItem('BrastlewarkVisitor'));\n\n    if(favoriteList !== null){this.setState({name: favoriteList.name})}\n    if (favoriteList !== null && favoriteList.favorites !== undefined) {\n      brastlewarkService.getAllHabitants()\n        .then(response => {\n          favoriteList = response.data.Brastlewark.filter(inhabitant => { return favoriteList.favorites.includes(inhabitant.id) });\n          this.setState({\n            favoriteList,\n          })\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  // Display the appropiate message if user is not allowed or favoriteList is empty\n  render() {\n    let { isAllowedVisitor } = this.props;\n    const { favoriteList, name } = this.state;\n    return (\n      <div>\n        <Header />\n        <div className=\"homepage\">\n          <div className=\"homepage-container\">\n            <div className=\"homepage-searchbox u-margin-bottom-medium favorites-searchbox\">\n              <div className=\"triangle\"></div>\n              <h1><span>{name}</span>, your favorites</h1>\n              <h2><span>(</span>AKA Tindegnomer :3<span>)</span></h2>\n            </div>\n            <div className=\"homepage-resultbody\">\n            {isAllowedVisitor ? (\n              favoriteList.length !== 0\n                ? favoriteList.map((favorite) => <SearchResultCard key={favorite.id} inhabitant={favorite} getFavoriteList={this.getFavoriteList} />)\n                : <div className=\"homepage-empty\">Love isn't in the air&nbsp;<span>:(</span> </div>\n            ) : (\n                <div className=\"homepage-empty\">\n                  <p>Hey! Who are you? What's your name?</p>\n                  <p>You have to be registered to enter here!</p>\n                  <Link to=\"/welcome\" className=\"button u-margin-top-medium back\">Go back to the entrance</Link>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WithAuth(Favorites);","import React, { Component } from 'react';\n\nimport Header from '../components/Header';\n\nimport brastlewarkService from '../services/BrastlewarkService';\n\n// We receive Gnome info from Link\nclass GnomeDetail extends Component {\n  state = {\n    gnomeInfo: this.props.location.gnomeInfo\n  }\n\n  // Make a new API call only in case of state lost\n  componentDidMount() {\n    const { gnomeInfo } = this.state;\n    if (gnomeInfo === undefined) {\n      brastlewarkService.getAllHabitants()\n        .then(response => {\n          const inhabitants = response.data.Brastlewark;\n          const gnomeInfo = inhabitants.filter(gnome => gnome.id === this.props.match.params.id * 1);\n          this.setState({\n            gnomeInfo: gnomeInfo[0]\n          })\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n\n  render() {\n    const { gnomeInfo } = this.state;\n    return (\n      <div>\n        <Header/>\n        <div className=\"gnomedetail\">\n          <div className=\"gnomedetail-container\">\n            <h1 className=\"u-padding-top-small u-margin-bottom-small\">Gnome details</h1>\n            {gnomeInfo === undefined ? <div>Loading...</div> : (\n              <div className=\"gnomedetail-card u-padding-bottom-small\">\n                <div className=\"back-button\" onClick={() => this.props.history.push('/homepage')}>&#171; back</div>\n                <p className=\"gnomedetail-card-name\">{gnomeInfo.name}</p>\n                <div className=\"gnomedetail-card-image\"><img src={gnomeInfo.thumbnail} alt={gnomeInfo.name} /></div>\n                <div className=\"gnomedetail-card-age\"><p>age <span>{gnomeInfo.age}</span></p><p>w <span>{gnomeInfo.weight}</span></p><p>h <span>{gnomeInfo.height}</span></p></div>\n                <div className=\"gnomedetail-card-friends u-margin-top-small\">\n                  <h2>friends</h2>\n                  {gnomeInfo.friends.length === 0 \n                    ? <p>Ok, ok... no time for friends, just to work</p> \n                    : <div className=\"gnomedetail-card-tagbody\">{gnomeInfo.friends.map((friend,i) => <span key={i}>{friend}</span>)}</div>\n                  }\n                </div>\n                <div className=\"gnomedetail-card-professions u-margin-top-small\">\n                  <h2>professions</h2>\n                  {gnomeInfo.professions.length === 0 \n                    ? <p>Nice life...</p> \n                    : <div className=\"gnomedetail-card-tagbody\">{gnomeInfo.professions.map((profession,i) => <span key={i}>{profession}</span>)}</div>\n                  }\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GnomeDetail;\n","import React, { Component } from 'react';\n\nimport Header from '../components/Header';\nimport notfoundImage from '../images/404.jpg';\n\nclass NotFound extends Component {\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"homepage\">\n          <div className=\"homepage-container\">\n            <div className=\"notfound\">\n              <img src={notfoundImage} alt=\"404 - Not Found\"/>\n            </div>\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\n\nimport AnonRoute from './components/AnonRoute.js';\n\nimport WelcomePage from './pages/WelcomePage';\nimport HomePage from './pages/HomePage';\nimport Favorites from './pages/Favorites';\nimport GnomeDetail from './pages/GnomeDetail';\nimport NotFound from './pages/NotFound';\n\nimport './sass/main.scss';\nimport AuthProvider from './contexts/auth-context';\n\nclass App extends Component {\n  render() {\n    return (\n      <AuthProvider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Redirect exact path=\"/\" to=\"/welcome\" />\n            <Redirect exact path=\"/gnomes\" to=\"/welcome\" />\n            <AnonRoute exact path='/welcome' component={WelcomePage} />\n            <Route exact path='/homepage' component={HomePage} />\n            <Route exact path='/favorites' component={Favorites} />\n            <Route exact path='/gnomes/:id' component={GnomeDetail} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}